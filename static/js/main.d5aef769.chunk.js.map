{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useEffect","addResponseMessage","className","id","handleNewUserMessage","newMessage","axios","get","then","res","setTimeout","data","senderPlaceHolder","title","subtitle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAoCeA,MA7Bf,WAiBI,OAhBFC,qBAAU,WACRC,6BAAmB,2JAGlB,IAaC,qBAAKC,UAAU,MAAMC,GAAG,aAAxB,SACE,cAAC,SAAD,CACEC,qBAbqB,SAACC,GAE5BC,IAAMC,IAAI,2CAA2CF,GACpDG,MAAK,SAAAC,GACJC,WAAWD,EAAK,KAChBR,6BAAmBQ,EAAIE,UASnBC,kBAAkB,0BAClBC,MAAM,UACNC,SAAS,QClBJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d5aef769.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport axios from 'axios';\n\nimport '../src/styles.css';\n\n\nfunction App() {\n  useEffect(() => {\n    addResponseMessage('Salut, je suis Graybot, je ferai de mon mieux pour rÃ©pondre Ã  vos questions ðŸ˜Š\\n' +\n        '\\n' +\n        'Comment est-ce que je peux vous aider aujourd\\'hui ?');\n  }, []);\n\n  const handleNewUserMessage = (newMessage) => {\n\n    axios.get(\"https://mobiblanc.com:5001/predict?text=\"+newMessage)\n    .then(res=>{\n      setTimeout(res, 8000);\n      addResponseMessage(res.data);\n    })\n    // Now send the message throught the backend API\n  };\n\n    return (\n      <div className=\"App\" id=\"chatwidget\">\n        <Widget\n          handleNewUserMessage={handleNewUserMessage}\n          senderPlaceHolder=\"Tapez votre message ...\"\n          title=\"Graybot\"\n          subtitle=\"\"\n        />\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}